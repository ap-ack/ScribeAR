{"version":3,"sources":["redux/actions.js","components/TextArea/index.js","components/TopSpace/Options/OnOff/index.js","components/TopSpace/Options/PlusMinus/index.js","components/TopSpace/Options/index.js","components/TopSpace/index.js","App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["increment_textSize","type","decrement_textSize","increment_lineWidth","decrement_lineWidth","increment_numLines","decrement_numLines","flip_lockScreen","flip_invertColors","TextArea","className","id","OnOff","props","setting","useSelector","dispatch","useDispatch","console","log","item","onClick","action","PlusMinus","decrement","style","textAlign","increment","Options","state","textSize","lineWidth","numLines","lockScreen","invertColors","TopSpace","optsHidden","updateCss","bind","toggle","this","setState","hidden","display","hide","React","Component","App","Boolean","window","location","hostname","match","allReducers","combineReducers","Math","max","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78a5f30d.chunk.js","sourcesContent":["export const increment_textSize = () => {\r\n     return { type: 'INCREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const decrement_textSize = () => {\r\n     return { type: 'DECREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const increment_lineWidth = () => {\r\n     return { type: 'INCREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const decrement_lineWidth = () => {\r\n     return { type: 'DECREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const increment_numLines = () => {\r\n     return { type: 'INCREMENT_NUMLINES' };\r\n}\r\n\r\nexport const decrement_numLines = () => {\r\n     return { type: 'DECREMENT_NUMLINES' };\r\n}\r\n\r\nexport const flip_lockScreen = () => {\r\n     return { type: 'FLIP_LOCKSCREEN' };\r\n}\r\n\r\nexport const flip_invertColors = () => {\r\n     return { type: 'FLIP_INVERTCOLORS' };\r\n}\r\n","import React from 'react';\r\nimport './index.css'\r\n/*\r\nwindow.SpeechRecognition = window.SpechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\nrecognition.lang = 'en-US';\r\nrecognition.continuous = false;\r\nrecognition.interimResults = true;\r\n*/\r\nexport default function TextArea() {\r\n     return (\r\n          <div className=\"grid-item\" id=\"out\">\r\n               <div className=\"element\">This is a temporary build of ClassTranscribe's ScribeAR platform, which is not yet operational.</div>\r\n               <div className=\"element\">In the future, this site will be able to capture everyday speech and transcribe it into live captions.</div>\r\n               <div className=\"element\">These captions will be optimized for use with an Android phone to be projected onto augmented reality glasses.</div>\r\n               <div className=\"element\">Designed for deaf and hard of hearing students in a lecture-style classroom.</div>\r\n          </div>\r\n     );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport default function OnOff(props) {\r\n     const setting = useSelector(props.setting);\r\n     const dispatch = useDispatch();\r\n     console.log(setting);\r\n     return (\r\n          <div className=\"row\">\r\n               <div className=\"col-8\">\r\n                    <p>{props.item}</p>\r\n               </div>\r\n               <div className=\"col-2 align-items-center\">\r\n                    <button\r\n                      className={setting ? \"btn btn-danger\" : \"btn btn-success\"}\r\n                      onClick={() => dispatch(props.action())}>\r\n                         {setting ? 'OFF' : 'ON'}\r\n                    </button>\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport default function PlusMinus(props) {\r\n     const setting = useSelector(props.setting);\r\n     const dispatch = useDispatch();\r\n     console.log(setting);\r\n     return (\r\n          <div className=\"row\">\r\n               <div className=\"col-2 align-items-center\">\r\n                    <button\r\n                      className=\"btn btn-default\"\r\n                      onClick={() => dispatch(props.decrement())}>-</button>\r\n               </div>\r\n               <div className=\"col-5\">\r\n                    <p>{props.item}</p>\r\n               </div>\r\n               <div className=\"col-1\">\r\n                    <p style={{textAlign:\"right\"}}>{setting}</p>\r\n               </div>\r\n               <div className=\"col-2 align-items-center\">\r\n                    <button\r\n                      className=\"btn btn-default\"\r\n                      onClick={() => dispatch(props.increment())}>+</button>\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OnOff from './OnOff';\r\nimport PlusMinus from './PlusMinus';\r\nimport './index.css';\r\nimport {\r\n     flip_lockScreen,\r\n     flip_invertColors,\r\n     increment_textSize,\r\n     decrement_textSize,\r\n     increment_lineWidth,\r\n     decrement_lineWidth,\r\n     increment_numLines,\r\n     decrement_numLines,\r\n} from '../../../redux/actions'\r\n\r\n/* first line used to be:\r\n <div className=\"Options\" id=\"options-space\" style={{display: this.updateCss()}}> */\r\n\r\nexport default function Options() {\r\n     const textSize = (state) => state.textSize;\r\n     const lineWidth = (state) => state.lineWidth;\r\n     const numLines = (state) => state.numLines;\r\n     const invertColors = (state) => state.invertColors;\r\n     const lockScreen = (state) => state.lockScreen;\r\n\r\n     return (\r\n          <div className=\"Options\" id=\"options-space\">\r\n               <h1>Options</h1>\r\n               <div className=\"item-wrapper\">\r\n                    <PlusMinus item=\"Text size\" setting={textSize}\r\n                         increment={increment_textSize}\r\n                         decrement={decrement_textSize} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <PlusMinus item=\"Line width\" setting={lineWidth}\r\n                         increment={increment_lineWidth}\r\n                         decrement={decrement_lineWidth} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <PlusMinus item=\"Number of lines\" setting={numLines}\r\n                         increment={increment_numLines}\r\n                         decrement={decrement_numLines} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <OnOff item=\"Lock screen\" setting={lockScreen}\r\n                         action={flip_lockScreen} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <OnOff item=\"Invert colors\" setting={invertColors}\r\n                         action={flip_invertColors} />\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.css';\r\nimport Options from './Options';\r\n\r\nclass TopSpace extends React.Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n               optsHidden: false\r\n          };\r\n          this.updateCss = this.updateCss.bind(this);\r\n          this.toggle = this.toggle.bind(this);\r\n     }\r\n     updateCss() {\r\n          if (this.state.optsHidden)\r\n               return 'none';\r\n          return 'block';\r\n     }\r\n     hide() {\r\n          this.setState({\r\n               optsHidden: true\r\n          });\r\n     }\r\n     toggle() {\r\n          if (this.state.optsHidden)\r\n               this.setState({\r\n                    optsHidden: false\r\n               });\r\n     }\r\n     render() {\r\n          return (\r\n               <div className=\"container-fluid\" onClick={this.toggle}>\r\n                    <div className=\"row\">\r\n                         <div className=\"col-1\"></div>\r\n                         <div className=\"col-5\" id=\"options-region\">\r\n                              <Options hidden={this.state.optsHidden}\r\n                                   toggle={this.props.toggle} />\r\n                         </div>\r\n                         <div className=\"col-6\" id=\"hide-region\"\r\n                           style={{display: this.updateCss()}}\r\n                           onClick={this.hide.bind(this)}>\r\n                              <p>Hide</p>\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nTopSpace.propTypes = {\r\n     toggle: PropTypes.func\r\n};\r\n\r\nexport default TopSpace;\r\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment } from './redux/actions';\nimport TextArea from './components/TextArea';\nimport TopSpace from './components/TopSpace';\nimport './App.css';\n\n/* var DEFAULT_TEXT_SIZE = 48;\nvar DEFAULT_LINE_WIDTH = 10;\nvar DEFAULT_NUM_LINES = 4;\n360 x 640 screen */\n\nclass App extends React.Component {\n     render() {\n          return (\n               <div className=\"App\">\n                    <div className=\"row-8\">\n                         <TopSpace />\n                    </div>\n                    <div className=\"row-4\">\n                         <TextArea />\n                    </div>\n               </div>\n          );\n     }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nconst textSizeReducer = (state = 48, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_TEXTSIZE':\r\n               return state + 1;\r\n          case 'DECREMENT_TEXTSIZE':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lineWidthReducer = (state = 10, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_LINEWIDTH':\r\n               return state + 1;\r\n          case 'DECREMENT_LINEWIDTH':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst numLinesReducer = (state = 4, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_NUMLINES':\r\n               return state + 1;\r\n          case 'DECREMENT_NUMLINES':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lockScreenReducer = (state = true, action) => {\r\n     if (action.type == 'FLIP_LOCKSCREEN')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertColorsReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_INVERTCOLORS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n     textSize: textSizeReducer,\r\n     lineWidth: lineWidthReducer,\r\n     numLines: numLinesReducer,\r\n     lockScreen: lockScreenReducer,\r\n     invertColors: invertColorsReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n     <Provider store={store}>\n          <App />\n     </Provider>,\n     document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}